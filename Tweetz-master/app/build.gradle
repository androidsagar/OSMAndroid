apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

buildscript {
    repositories {
        mavenCentral()
    }
}

// Required because retrolambda is on maven central
repositories {
    mavenCentral()
}

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.rahulrv.tweetz"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'END_POINT', '"https://api.twitter.com/1.1/"'
        buildConfigField 'String', 'AUTH_END_POINT', '"https://api.twitter.com/oauth2/token"'
        buildConfigField 'String', 'CONSUMER_KEY', '"xhBLIT2ZAdutz4aI9rwIjVEuy"'
        buildConfigField 'String', 'CONSUMER_SECRET', '"B6sZAkPQj6F6RDXicWLtv75mn4miBXLpdIZ34tDJ7HTkWqcfOJ"'
        buildConfigField 'String', 'AUTH_TOKEN', '"2893921857-wZ7pQxmeEkT3Gx1nO98aT0sE97FHyvqCNzJMQKB"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        htmlReport true
        htmlOutput file("lint-report.html")
        abortOnError true
        warningsAsErrors true
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    /* support libraries*/
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    compile "com.android.support:cardview-v7:$supportLibVersion"
    compile "com.android.support:customtabs:$supportLibVersion"

    /* reactive */
    compile 'io.reactivex.rxjava2:rxjava:2.0.2'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    /* Retrofit 2*/
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    /* AutoValue*/
    provided 'com.google.auto.value:auto-value:1.2'
    annotationProcessor 'com.google.auto.value:auto-value:1.2'

    /* Gson */
    compile 'com.google.code.gson:gson:2.4'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-gson:0.4.5'
    provided 'com.ryanharter.auto.value:auto-value-gson:0.4.5'

    /* Dagger */
    compile 'com.google.dagger:dagger:2.8'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.8'
    provided 'javax.annotation:jsr250-api:1.0'

    compile 'com.squareup.picasso:picasso:2.5.2'

    /* Test */
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile "org.powermock:powermock-module-junit4:1.6.5"
    testCompile "org.powermock:powermock-module-junit4-rule:1.6.5"
    testCompile "org.powermock:powermock-api-mockito:1.6.5"

    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-annotations'
    }
}

task checkstyle(type: Checkstyle) {
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'

    def configProps = ['proj.module.dir': projectDir.absolutePath]
    configProperties configProps

    // empty classpath
    classpath = files()

    showViolations true

    reports {
        xml.enabled false
        html.enabled true
    }
}

preBuild.dependsOn('checkstyle')
